/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
buildscript {
    repositories { mavenCentral() }
    dependencies { classpath("se.transmode.gradle:gradle-docker:1.2") }
}

plugins {
    id 'net.researchgate.release' version '2.6.0'
    id "nebula.ospackage" version "4.5.1"
    id 'com.github.sherter.google-java-format' version '0.5'
    // For the managing of the Licences
    id "com.github.hierynomus.license" version "0.14.0"
    // For managing the dependencies' versions
    id 'com.github.ben-manes.versions' version '0.13.0'
    id 'org.springframework.boot' version '1.5.11.RELEASE'
}

apply plugin: 'java'
apply plugin: 'docker'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

apply from: 'gradle/gradle/git.helpers.gradle'
apply from: 'gradle/gradle/helpers.gradle'

/**
 * Project settings
 */
ext {
    //------------------------------------------------//
    /**
     * Spring Boot version (replace it also in the plugin section!)
     */
    springBootVersion = '1.5.11.RELEASE'
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * Application Related Version
     */
    applicationVersion = version

    applicationRelease = isApplicationRelease()
    applicationDate = new Date()
    applicationRevision = getRevision()

    applicationVersionSnapshot = (!applicationRelease) ? ".${asUTC(applicationDate, 'yyyyMMdd')}.git${applicationRevision}" : ""
    applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * Junit Version
     */
    junitVersion = '4.12'
}

ext['flyway.version'] = '4.2.0'

apply from: 'gradle/gradle/application.java.gradle'
apply from: 'gradle/gradle/git.release.gradle'

apply from: 'gradle/gradle/packaging.nfvo.debian.gradle'
apply from: 'gradle/gradle/packaging.nfvo.docker.gradle'

apply from: 'gradle/gradle/distribution.gradle'

apply from: 'gradle/gradle/dependencies.updater.gradle'

apply from: 'gradle/gradle/licenses.gradle'

repositories {
    mavenCentral()
}

mainClassName = 'org.openbaton.nfvo.main.Application'

dependencies {
    compile project(':main')
    // Enable automatic restart upon code changes
    // More info: https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html#using-boot-devtools-restart
    //compile 'org.springframework.boot:spring-boot-devtools'
}

allprojects {
    jar {
        manifest {
            attributes("Implementation-Version": version)
        }
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

compileJava.dependsOn tasks.googleJavaFormat

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}

task mappings {
    doLast {
        println conf2ScopeMappings.mappings
    }
}
